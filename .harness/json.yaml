pipeline:
  name: json
  identifier: json
  projectIdentifier: cd_demo
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: brendaSCM
        repoName: json-harness
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: brendaSCM
                    repoName: json-harness
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: "#!/bin/bash\n#\_Step\_1:\_Linux\_server\_(already\_assumed\_to\_be\_present)\nsudo apt-get install jq wget unzip -y\nsudo apt-get update -y\n#\_Install\_Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n#Start Docker service\nsudo systemctl start docker\n#step 2 :Install the service using Docker\nservice_name=\"<+pipeline.stages.Build.variables.service>\"\nservice_tag=\"<+pipeline.stages.Build.variables.tag>\"\n#Pull the Docker image\ndocker pull \"$service_name\":\"$service_tag\"\n#\_Run\_the\_Docker\_container\ndocker run -d --name \"$service_name\" \"$service_name\":\"$service_tag\"\ninstalled_service_name=\"$service_name\"\ninstalled_service_tag=\"$service_tag\"\ngithub_repo=\"json-harness\"\ngithub_token=\"<+pipeline.stages.Build.variables.task123>\"\nusername=\"BrenadMohan\"\ncd json-harness/\nfile_content=$(cat json-harness/json)\nif[[ \"$file_content\" == *\"$installed_service_name\"*]] && [[ \"$file_content\" == *\"$installed_service_tag\"*]]; then\n  echo \"Service and tag already exist in the file on GitHub.\"\nelse\n  echo '[{\"service\": \"$service_name\", \"tag\": \"$service_tag\"}]' | jq '. + [{\"service\": \"new-service\", \"tag\": \"v2.0\"}]'\nfi\necho \"$fileContent\" > json-harness/json\ngit remote set-url origin https://$username:$github_token@github.com/$username/json-harness.git\ngit add .\ngit commit -m \"Update JSON file\"\ngit push -u origin main\n\n\n\n\n"
        variables:
          - name: service
            type: String
            description: ""
            value: nginx
          - name: tag
            type: String
            description: ""
            value: latest
          - name: task123
            type: Secret
            description: ""
            value: harnesspatgit
