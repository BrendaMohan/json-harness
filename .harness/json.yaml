pipeline:
  name: json
  identifier: json
  projectIdentifier: cd_demo
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: brendaSCM
        repoName: json-harness
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: "\n#!/bin/bash\n\n\_\n\n# Install jq if necessary\n\n\_\n\n\_ sudo apt-get install jq -y\n\n\_ #sudo apt-get upgrade -y\n\n\_\n\n#cd shivakumar123441/task-repo/\n\n\_\n\n# Read the JSON file content\n\nfileContent=$(cat json-harness/json)\n\n\_\n\n# Check the value of \"a\" and update if necessary\n\nif [[ $(echo \"$fileContent\" | jq -r '.a') != \"1\" ]]; then\n\n\_ fileContent=$(echo \"$fileContent\" | jq '.a = \"1\"')\n\nfi\n\n\_\n\n# Check the presence of \"b\" and add if necessary\n\nif [[ $(echo \"$fileContent\" | jq -r 'has(\"b\")') == \"false\" ]]; then\n\n\_ fileContent=$(echo \"$fileContent\" | jq '.b = \"1\"')\n\nfi\n\n\_\n\n# Write the modified content back to the JSON file\n\necho \"$fileContent\" > json-harness/json\n\n\_\n\n# Stage the modified JSON file\n\ncd json-harness/\n\ngit remote -v\n\n\_\n\ngit add .\n\n\_\n\n# Commit the changes\n\ngit commit -m \"Update JSON file\"\n\n\_\n\n# Push the changes back to the repository\n\ngit push\n\n\n\n\n\n\n\n\n[19:50] \n\n\n\n\n19:50â€ƒCall ended\_7m 22s \n"
