pipeline:
  name: json
  identifier: json
  projectIdentifier: cd_demo
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: brendaSCM
        repoName: json-harness
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: brendaSCM
                    repoName: json-harness
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: "#!/bin/bash\n\n#\_Step\_1:\_Linux\_server\_(already\_assumed\_to\_be\_present)\nsudo apt-get install jq wget unzip -y\n\nsudo\_apt-get\_update\_-y\n#\_Install\_Docker\n\ncurl\_-fsSL\_https://get.docker.com\_-o\_get-docker.sh\n\nsudo\_sh\_get-docker.sh\n\n\_\n\n#\_Start\_Docker\_service\n\nsudo\_systemctl\_start\_docker\n#\_Step\_2:\_Install\_the\_service\_using\_Docker\n\nservice_name=\"<+pipeline.stages.Build.variables.service>\"\n\nservice_tag=\"<+pipeline.stages.Build.variables.tag>\"\n\n#\_Pull\_the\_Docker\_image\n\ndocker\_pull\_\"$service_name\":\"$service_tag\"\n\n#\_Run\_the\_Docker\_container\n\ndocker\_run\_-d\_--name\_\"$service_name\"\_\"$service_name\":\"$service_tag\"\n\n#\_Step\_3:\_Fetch\_the\_service\_name\_and\_its\_tag\n\ninstalled_service_name=\"$service_name\"\n\ninstalled_service_tag=\"$service_tag\"\n\n#\_Step\_4:\_Check\_if\_the\_service\_name\_and\_tag\_exist\_in\_the\_file\_on\_GitHub\n\n#\_GitHub\_repository\_details\n\ngithub_repo=\"json-harness\"\n\ngithub_token=\"<+pipeline.stages.Build.variables.task123>\"\n\nusername=\"BrendaMohan\"\n\ncd\_json-harness/\n\nfile_content=$(cat\_json-harness/json)\n#\_Check\_if\_the\_service\_name\_and\_tag\_exist\_in\_the\_file\n\nif\_[[\_\"$file_content\"\_==\_*\"$installed_service_name\"*\_]]\_&&\_[[\_\"$file_content\"\_==\_*\"$installed_service_tag\"*\_]];\_then\n\n\_ echo\_\"Service\_and\_tag\_already\_exist\_in\_the\_file\_on\_GitHub.\"\n\nelse\n\n\_ #\_Update\_or\_add\_the\_service\_name\_and\_tag\_to\_the\_file\n\n\_ echo\_'[{\"service\":\_\"$service_name\",\_\"tag\":\_\"$service_tag\"}]'\_|\_jq\_'.\_+\_[{\"service\":\_\"new-service\",\_\"tag\":\_\"v2.0\"}]'\n\nfi\necho\_\"$fileContent\"\_>\_task-repo/json.file\n\ngit\_remote\_set-url\_origin\_https://$username:$github_token@github.com/$username/json-harness.git\ngit\_add\_.\n#\_Commit\_the\_changes\n\ngit\_commit\_-m\_\"Update\_JSON\_file\"\n\n#\_Push\_the\_changes\_back\_to\_the\_repository\n\ngit\_push\_-u\_origin\_main\n\n\n\n"
        variables:
          - name: service
            type: String
            description: ""
            value: nginx
          - name: tag
            type: String
            description: ""
            value: latest
          - name: task123
            type: Secret
            description: ""
            value: harnesspatgit
